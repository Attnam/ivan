/*
 *
 *  Iter Vehemens ad Necem (IVAN)
 *  Copyright (C) Timo Kiviluoto
 *  Released under the GNU General
 *  Public License
 *
 *  See LICENSING which should be included
 *  along with this file for more details
 *
 */

/*
 * NOTICE!!!
 *
 * This file contains SPOILERS, which might ruin your IVAN experience
 * totally. Also, editing anything can DESTROY GAME BALANCE or CAUSE
 * OBSCURE BUGS if you don't know what you're doing. So from here on,
 * proceed at your own risk!
 */

Dungeon PYRAMID;
{
  Levels = 5;
  Description = "Pyramid";
  ShortDescription = "PY";

  LevelDefault
  {
    FillSquare = solidterrain(SAND_TERRAIN), SAND_STONE wall(BRICK_OLD);
    TunnelSquare = solidterrain(SAND_TERRAIN), 0;
    Size = 64, 36;
    Rooms = 10:30;
    Items = 25:50;
    GenerateMonsters = true;
    IsOnGround = false;
    TeamDefault = MONSTER_TEAM;
    LOSModifier = 16;
    IgnoreDefaultSpecialSquares = false;
    DifficultyBase = 120;
    DifficultyDelta = 30;
    MonsterAmountBase = 25;
    MonsterAmountDelta = 5;
    MonsterGenerationIntervalBase = 100;
    MonsterGenerationIntervalDelta = -10;
    CanGenerateBone = true;
    ItemMinPriceBase = 80;
    ItemMinPriceDelta = 10;
    EnchantmentMinusChanceBase = 0;
    EnchantmentMinusChanceDelta = 0;
    EnchantmentPlusChanceBase = 15;
    EnchantmentPlusChanceDelta = 10;
    BackGroundType = YELLOW_FRACTAL;
    IsCatacomb = true;
    EarthquakesAffectTunnels = true;
    AudioPlayList =
    {
      3,
      "Dungeon.mid",
      "Dungeon2.mid",
      "Dungeon3.mid";
    }

    /* Decorations */
    Square, Random HAS_NO_OTERRAIN;
    {
      Items == bone;
      Times = 12:24;
    }

    Square, Random HAS_NO_OTERRAIN;
    {
      Items == skull;
      Times = 4:8;
    }

    Square, Random HAS_NO_OTERRAIN|IN_ROOM;
    {
      OTerrain = RED_SAND_STONE coffin;
      Times = 2:6;
    }

    /* Traps & Monsters */
    Square, Random HAS_NO_OTERRAIN;
    {
      Items == beartrap { Team = MONSTER_TEAM; IsActive = true; }
      Times = 3:9;
    }

    Square, Random HAS_NO_OTERRAIN;
    {
      Character = necromancer(APPRENTICE_NECROMANCER);
      Times = 0:3;
    }

    Square, Random HAS_NO_OTERRAIN;
    {
      Character = skeleton(WARRIOR);
      Times = 2:4;
    }

    RoomDefault
    {
      Pos = 2:XSize-5,2:YSize-5;
      Size = 5:9,5:9;
      AltarPossible = true;
      FloorSquare = SAND_STONE solidterrain(PARQUET), 0;
      DoorSquare = SAND_STONE solidterrain(PARQUET), IRON door(BARDOOR);
      GenerateDoor = true;
      DivineMaster = 0;
      GenerateTunnel = true;
      GenerateLanterns = true;
      Type = ROOM_NORMAL;
      GenerateFountains = true;
      AllowLockedDoors = true;
      AllowBoobyTrappedDoors = true;
      Shape = ROUND_CORNERS;
      IsInside = true;
      GenerateWindows = false;
      UseFillSquareWalls = true;
      Flags = 0;
    }
  }

  Level 0;
  {
    Rooms = 2:3;
    Size = 42, 26;

    Room
    {
      Size = 21,21;
      AltarPossible = false;
      GenerateFountains = false;
      GenerateLanterns = false;
      Shape = MAZE_ROOM;

      /* Traps & Stairs */
      Square, Random HAS_NO_OTERRAIN;
      {
        OTerrain = stairs(STAIRS_DOWN);
        EntryIndex = STAIRS_DOWN;
      }

      Square, Random HAS_NO_OTERRAIN;
      {
        Items == gastrap { Team = MONSTER_TEAM; IsActive = true; }
        Times = 2:5;
      }

      /* Monsters */
      Square, Random HAS_NO_OTERRAIN;
      {
        Character = zombie;
        Times = 5:10;
      }

      Square, Random HAS_NO_OTERRAIN;
      {
        Character = skeleton;
        Times = 5:10;
      }

      Square, Random HAS_NO_OTERRAIN;
      {
        Character = spider(GIANT);
        Times = 2:4;
      }
    }

    Square, Random NOT_WALKABLE|ATTACHABLE;
    {
      OTerrain = stairs(STAIRS_UP);
      EntryIndex = STAIRS_UP;
      AttachRequired = true;
    }
  }

  Level 1;
  {
    Size = 20, 100;

    RoomDefault
    {
      Pos = 2:XSize-5,2:YSize-5;
    }

    Square, Random;
    {
      Character = veterankamikazedwarf(MORTIFER);
    }

    /* Stairs & Traps */
    Square, BoundedRandom 1, 1, 18, 18, NOT_WALKABLE|ATTACHABLE;
    {
      OTerrain = stairs(STAIRS_UP);
      EntryIndex = STAIRS_UP;
      AttachRequired = true;
    }

    Square, BoundedRandom 1, 81, 18, 98, NOT_WALKABLE|ATTACHABLE;
    {
      OTerrain = stairs(STAIRS_DOWN);
      EntryIndex = STAIRS_DOWN;
      AttachRequired = true;
    }

    Square, Random HAS_NO_OTERRAIN;
    {
      Items == mine { Team = MONSTER_TEAM; IsActive = true; }
      Times = 1:4;
    }

    Square, Random HAS_NO_OTERRAIN;
    {
      Items == gastrap { Team = MONSTER_TEAM; IsActive = true; }
      Times = 1:4;
    }
  }

  Level 2;
  {
    Size = 100, 20;
    IsCatacomb = false;
    FillSquare = CONCRETE solidterrain(GROUND), CONCRETE wall(BRICK_OLD);
    TunnelSquare = CONCRETE solidterrain(GROUND), 0;

    RoomDefault
    {
      Pos = 2:XSize-5,2:YSize-5;
      FloorSquare = CONCRETE solidterrain(PARQUET), 0;
      DoorSquare = CONCRETE solidterrain(PARQUET), STEEL door(BARDOOR);
    }

    /* Stairs & Traps */
    Square, BoundedRandom 81, 1, 98, 18, NOT_WALKABLE|ATTACHABLE;
    {
      OTerrain = stairs(STAIRS_UP);
      EntryIndex = STAIRS_UP;
      AttachRequired = true;
    }

    Square, BoundedRandom 1, 1, 18, 18, NOT_WALKABLE|ATTACHABLE;
    {
      OTerrain = stairs(STAIRS_DOWN);
      EntryIndex = STAIRS_DOWN;
      AttachRequired = true;
    }

    Square, Random HAS_NO_OTERRAIN;
    {
      Items == mine { Team = MONSTER_TEAM; IsActive = true; }
      Times = 1:4;
    }

    Square, Random HAS_NO_OTERRAIN;
    {
      Items == mine(BIG_MINE) { Team = MONSTER_TEAM; IsActive = true; }
      Times = 0:3;
    }

    Square, Random HAS_NO_OTERRAIN;
    {
      Items == gastrap { Team = MONSTER_TEAM; IsActive = true; }
      Times = 1:4;
    }
  }

  Level 3;
  {
    Size = 20, 100;
    IsCatacomb = false;
    FillSquare = HARDENED_CONCRETE solidterrain(GROUND), HARDENED_CONCRETE wall(BRICK_FINE);
    TunnelSquare = HARDENED_CONCRETE solidterrain(GROUND), 0;

    RoomDefault
    {
      Pos = 2:XSize-5,2:YSize-5;
      FloorSquare = HARDENED_CONCRETE solidterrain(PARQUET), 0;
      DoorSquare = HARDENED_CONCRETE solidterrain(PARQUET), STEEL door(BARDOOR);
    }

    /* Stairs & Traps */
    Square, BoundedRandom 1, 81, 18, 98, NOT_WALKABLE|ATTACHABLE;
    {
      OTerrain = stairs(STAIRS_UP);
      EntryIndex = STAIRS_UP;
      AttachRequired = true;
    }

    Square, BoundedRandom 1, 1, 18, 18, NOT_WALKABLE|ATTACHABLE;
    {
      OTerrain = stairs(STAIRS_DOWN);
      EntryIndex = STAIRS_DOWN;
      AttachRequired = true;
    }

    Square, Random HAS_NO_OTERRAIN;
    {
      Items == mine { Team = MONSTER_TEAM; IsActive = true; }
      Times = 2:4;
    }

    Square, Random HAS_NO_OTERRAIN;
    {
      Items == mine(BIG_MINE) { Team = MONSTER_TEAM; IsActive = true; }
      Times = 1:3;
    }

    Square, Random HAS_NO_OTERRAIN;
    {
      Items == gastrap { Team = MONSTER_TEAM; IsActive = true; }
      Times = 2:4;
    }

    Room
    {
      Size = 9,9;
      AltarPossible = false;
      GenerateFountains = false;
      GenerateLanterns = false;
      Shape = MAZE_ROOM;

      Square, Random HAS_NO_OTERRAIN;
      {
        Character = mysticfrog(DARK);
      }

      Square, Random HAS_NO_OTERRAIN;
      {
        Character = frog(GREATER_DARK);
      }

      Square, Random HAS_NO_OTERRAIN;
      {
        Character = frog(DARK);
        Times = 2:4;
      }
    }
  }

  Level 4;
  {
    Description = "ancient bunker";
    ShortDescription = "Bunker";
    Items = 0;
    IsCatacomb = false;
    CanGenerateBone = false;
    IgnoreDefaultSpecialSquares = true;
    FillSquare = SUPER_CONCRETE solidterrain(GROUND), SUPER_CONCRETE wall(BRICK_FINE);
    TunnelSquare = SUPER_CONCRETE solidterrain(GROUND), 0;
    BackGroundType = GRAY_FRACTAL;
    LevelMessage = "You feel a sudden pang of pain in the back of your brain.";

    RoomDefault
    {
      FloorSquare = SUPER_CONCRETE solidterrain(PARQUET), 0;
      DoorSquare = SUPER_CONCRETE solidterrain(PARQUET), STAINLESS_STEEL door(BARDOOR);
    }

    /* TODO: boss? */

    Square, Random NOT_WALKABLE|ATTACHABLE;
    {
      OTerrain = stairs(STAIRS_UP);
      EntryIndex = STAIRS_UP;
      AttachRequired = true;
    }

    /* the Nuke */
    Room
    {
      Size = 11,11;
      GenerateLanterns = true;
      GenerateFountains = false;
      AltarPossible = false;
      GenerateDoor = false;
      GenerateTunnel = false;
      UseFillSquareWalls = false;
      WallSquare = LEAD solidterrain(PARQUET), LEAD wall(BRICK_FINE);
      FloorSquare = LEAD solidterrain(PARQUET), 0;
      Shape = RECTANGLE;
      Flags = NO_MONSTER_GENERATION;

      Square, Pos 0,1;
      {
        GTerrain = LEAD solidterrain(PARQUET);
        OTerrain = LEAD door { Parameters = LOCKED; }
        AttachRequired = true;
      }

      Square, Pos 10,9;
      {
        GTerrain = LEAD solidterrain(PARQUET);
        OTerrain = LEAD door { Parameters = LOCKED; }
        AttachRequired = true;
      }

      OTerrainMap
      {
        Size = 5,5;
        Pos = 3,3;
        Types
        {
          # = GLASS wall(BRICK_FINE);
          _ = PLASTIC_STEEL decoration(PEDESTAL);
        }
      }
      {
        #####
        #...#
        #...#
        #...#
        #####
      }

      Square, Pos 5,5;
      {
        Items == nuke;
      }
    }

    /* Mind Worms */
    Room
    {
      Size = 7,7;
      GenerateFountains = false;
      AltarPossible = false;
      Shape = RECTANGLE;

      OTerrainMap
      {
        Pos = 2,2;
        Size = 3,3;

        Types
        {
          # = STAINLESS_STEEL barwall;
        }
      }
      {
        ###
        #.#
        ###
      }

      Square, Pos 3,3;
      {
        Character = mindworm(BOIL);
      }
    }

    Room
    {
      Size = 7,7;
      GenerateFountains = false;
      AltarPossible = false;
      Shape = RECTANGLE;

      OTerrainMap
      {
        Pos = 2,2;
        Size = 3,3;

        Types
        {
          # = STAINLESS_STEEL barwall;
        }
      }
      {
        ###
        #.#
        ###
      }

      Square, Pos 3,3;
      {
        Character = mindworm(BOIL);
      }
    }

    Room
    {
      Size = 7,7;
      GenerateFountains = false;
      AltarPossible = false;
      Shape = RECTANGLE;

      OTerrainMap
      {
        Pos = 2,2;
        Size = 3,3;

        Types
        {
          # = STAINLESS_STEEL barwall;
        }
      }
      {
        ###
        #.#
        ###
      }

      Square, Pos 3,3;
      {
        Character = mindworm(BOIL);
      }
    }

    /* Treasure */
    Room
    {
      GenerateLanterns = true;
      GenerateFountains = false;
      AltarPossible = false;
      Shape = RECTANGLE;

      Square, Random HAS_NO_OTERRAIN;
      {
        Items == Random { MinPrice = 150; ConfigFlags = NO_BROKEN; }
        Times = 20;
      }
    }

    Room
    {
      GenerateLanterns = true;
      GenerateFountains = false;
      AltarPossible = false;
      Shape = RECTANGLE;

      Square, Random HAS_NO_OTERRAIN;
      {
        Items == Random { MinPrice = 150; ConfigFlags = NO_BROKEN; }
        Times = 20;
      }
    }
  }

  /* Decorations */
  RandomLevel 0:3;
  {
    Square, Random HAS_NO_OTERRAIN|IN_ROOM;
    {
      OTerrain = fountain { SecondaryMaterial = LIQUID_DARKNESS; }
    }
  }

  RandomLevel 0:3;
  {
    Square, Random HAS_NO_OTERRAIN|IN_ROOM;
    {
      OTerrain = fountain { SecondaryMaterial = POISON_LIQUID; }
    }
  }

  RandomLevel 0:3;
  {
    Square, Random HAS_NO_OTERRAIN|IN_ROOM;
    {
      OTerrain = fountain { SecondaryMaterial = SICK_BLOOD; }
    }
  }

  /* Quicksand Pool */
  RandomLevel 1:3;
  {
    Room
    {
      GenerateLanterns = false;
      GenerateFountains = false;
      AltarPossible = false;
      FloorSquare = QUICK_SAND liquidterrain(UNDERGROUND_LAKE), 0;
      Flags = NO_MONSTER_GENERATION;
    }
  }

  /* Cactus Room */
  RandomLevel 1:3;
  {
    Room
    {
      FloorSquare = RED_SAND solidterrain(SAND_TERRAIN), 0;
      Shape = RECTANGLE;

      Square, Random HAS_NO_OTERRAIN;
      {
        OTerrain = decoration(CACTUS);
        Times = 4:8;
      }
    }
  }

  /* Sepulcher */
  RandomLevel 1:3;
  {
    Room
    {
      GenerateLanterns = false;
      GenerateFountains = false;
      GenerateDoor = false;
      GenerateTunnel = false;
      AltarPossible = false;
      Size = 5,5;
      UseFillSquareWalls = true;
      FloorSquare = IRON solidterrain(PARQUET), 0;
      Shape = RECTANGLE;
      Flags = NO_MONSTER_GENERATION;

      OTerrainMap
      {
        Pos = 1,1;
        Size = 3,3;
        Types
        {
          # = IRON wall(BRICK_OLD);
        }
      }
      {
        ###
        #.#
        ###
      }

      Square, Pos 2,2;
      {
        Character = genie { Inventory = { 2,  oillamp, Random { MinPrice = 2000; } } }
        Items == ARCANITE ARCANITE meleeweapon(TWO_HANDED_SCIMITAR);
      }
    }
  }

  /* Minibosses */
  RandomLevel 1:3;
  {
    Room
    {
      Size = 9,9;
      AltarPossible = false;
      GenerateFountains = false;
      GenerateLanterns = false;
      Shape = MAZE_ROOM;

      Square, Random HAS_NO_OTERRAIN;
      {
        Character = necromancer(APPRENTICE_NECROMANCER);
        Times = 2;
      }

      Square, Random HAS_NO_OTERRAIN;
      {
        Character = necromancer(MASTER_NECROMANCER);
      }
    }
  }

  RandomLevel 1:3;
  {
    Room
    {
      Size = 9,9;
      AltarPossible = false;
      GenerateFountains = false;
      GenerateLanterns = false;
      Shape = MAZE_ROOM;

      Square, Random HAS_NO_OTERRAIN;
      {
        Character = vampire;
        Times = 3;
      }
    }
  }

  RandomLevel 1:3;
  {
    Room
    {
      Size = 9,9;
      AltarPossible = false;
      GenerateFountains = false;
      GenerateLanterns = false;
      Shape = MAZE_ROOM;

      Square, Random HAS_NO_OTERRAIN;
      {
        Character = gasghoul;
        Times = 2:5;
      }
    }
  }

  RandomLevel 1:3;
  {
    Room
    {
      Size = 9,9;
      AltarPossible = false;
      GenerateFountains = false;
      GenerateLanterns = false;
      Shape = MAZE_ROOM;

      Square, Random HAS_NO_OTERRAIN;
      {
        Character = golem(WRAITH_BONE);
        Times = 2:5;
      }

      Square, Random HAS_NO_OTERRAIN;
      {
        Character = golem(ACIDOUS_BLOOD);
      }
    }
  }
}
